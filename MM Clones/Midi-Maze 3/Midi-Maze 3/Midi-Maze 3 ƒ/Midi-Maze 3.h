#include <portab.h>typedef struct Features {	unsigned	invis:1;		// Unsichtbarkeit	unsigned	swalls:1;		// Schuß durch Wände	unsigned	hideplayer:1;	// Spieler NIE auf der Karte zeigen	unsigned	sfastshoot:1;	// schneller Schuß	unsigned	autoanswer:1;	// automatischer Rückschuß	unsigned	sradius:1;		// Schußradius vergrößern	unsigned	showplayer:1;	// stets alle Spieler zeigen	unsigned	fastplayer:1;	// Spieler doppelt so schnell	unsigned	sreflective:1;	// reflective Shot	unsigned	absdeadly:1;	// absolut tödlicher Schuß	unsigned	noabsdeadly:1;	// absolut tödlicher Schuß unmöglich	unsigned	got_you:1;		// Selbstmord	unsigned	no_got_you:1;	// Pech gehabt, kein Selbstmord	unsigned	noface:1;		// Spieler hat kein Gesicht	unsigned	friendly:1;		// Friendly fire	unsigned	deadly:1;		// Deadly fire	unsigned	kompass:1;		// Kompass	unsigned	karte:1;		// Karte beliebig an/ausschaltbar	unsigned	onejump:1;		// Hyperjump (Spieler neu setzen)	unsigned	nowand:1;		// Gehen durch eine Wand ist möglich	unsigned	luft:1;			// andere Spieler sind "Luft"	unsigned	turn180:1;		// 180°-Drehung	unsigned	karte_init:1;	// Karte gekauft, nun kann man sie benutzen	unsigned	shotwarn:1;		// Warnung, wenn Schuß in der Nähe	unsigned	noshot:1;		// Schießen ist nicht möglich!	unsigned	key:1;			// der Schlüssel für die Türen	unsigned	turnslow:1;		// langsames Drehen (pixelweise)	unsigned	turnfast:1;		// Schnelles Drehen (*2)	unsigned	nocolor:1;		// farbloser Shape	unsigned	midicam:1;		// MIDICAM (keine Tastatur, hide beim Start)} Features;typedef struct {	WORD		y;				// (ply_y) Y-Position der Figur*128	WORD		x;				// (ply_x) X-Position der Figur*128	WORD		dir;			// (ply_richtung) Blickrichtung des Spielers (0-255)	WORD		lives;			// (ply_lives) Anzahl der Leben	WORD		refresh;		// (ply_refresh) Refreshcounter	WORD		hitflag;		// (ply_hitflag) =1, wenn angeschossen	WORD		reload;			// (ply_reload) Nachladezeit beim Schießen	WORD		gunman;			// (ply_gunman) Nummer des Schützen	WORD		looser;			// (ply_looser) Nummer des getroffenen Opfers	WORD		killscore;		// (ply_killscore) Anzahl der Abschüsse	WORD		hitscore;		// (ply_hitscore) Anzahl der Treffer	WORD		shitscore;		// (ply_shitscore) alte Trefferanzahl	WORD		score;			// (ply_score) Gesamtscore	WORD		hits;			// (ply_hits) temp.Anzahl der Treffer	WORD		warnflag;		// (ply_warnflag) <>0 => Schuß in der Umgebung (Timer)// (ply_send_start) Senden ab hier:	WORD		team;			// (ply_team) Nummer des eigenen Teams	WORD		reload_time;	// (ply_reload_t) Reload-Time	WORD		refresh_time;	// (ply_refresh_t) Refresh-Time	WORD		regen_time;		// (ply_regen_t) Regen-Time	WORD		revive_live;	// (ply_revive_live) Anzahl der Leben nach dem Tode	struct Features afeat;		// aktive Features	struct Features mfeat;		// mögliche Features	struct Features kfeat;		// kaufbare Features	WORD		swioffset;		// (ply_swioffset) Init-Offset (0= keiner)	WORD		swcinit;		// (ply_swcinit) Init-Zählerwert	WORD		winscore;		// (ply_winscore) nötiger Score zum gewinnen	Str31		name;			// (ply_name) Name des Spielers (max.31 Zeichen)// (ply_send_ende) Senden bis hier	WORD		sdeltay;		// (ply_sdeltay) Speed Y	WORD		sdeltax;		// (ply_sdeltax) Speed X	WORD		swcounter;		// (ply_swcounter) 0=Winkeloffset im Vorzeichen drehen	WORD		swoffset;		// (ply_swoffset) Winkeloffset für den Schuß pro Durchlauf	WORD		plist;			// (ply_plist) verkettete Liste der Spieler	WORD		shooty;			// (ply_shooty) Y-Position des Schußes	WORD		shootx;			// (ply_shootx) X-Position des Schußes	WORD		shootr;			// (ply_shootr) Richtung des Schußes (0-255)	WORD		shoot;			// (ply_shoot) <>0 => Schuß aktiv	WORD		slist;			// (ply_slist) verkettete Liste der Schüsse} Player,*PlayerP,**PlayerH;